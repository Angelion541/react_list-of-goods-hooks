{"version":3,"sources":["App.tsx","api/goods.ts","api/buttonClasses.ts","index.tsx"],"names":["SortType","goodsFromServer","buttonClasses","App","useState","goodsVisible","setGoodsVisible","lenthOfWords","setSelectedLength","isReversed","setIsReversed","nosort","sortBy","setSortBy","visibleGoods","filter","good","length","sort","good1","good2","alfabetically","localeCompare","reverse","className","type","classNames","onClick","value","onChange","element","target","map","ReactDOM","render","document","getElementById"],"mappings":"6KAQKA,E,8CCRQC,G,MAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WCVWC,EAA0B,CACrC,SACA,UACA,WACA,MACA,iB,iBFGGF,K,8BAAAA,E,gBAAAA,E,WAAAA,M,KAME,IAAMG,EAAU,WACrB,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CF,mBAAS,GAAnD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA4BN,mBAASJ,EAASW,QAA9C,mBAAOC,EAAP,KAAeC,EAAf,KAGMC,EAAeb,EAAgBc,QACnC,SAACC,GAAD,OAAUA,EAAKC,QAAUV,KAkB3B,OAfAO,EAAaI,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKZ,EAASqB,cACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKpB,EAASiB,OACZ,OAAOE,EAAMF,OAASG,EAAMH,OAC9B,QACE,OAAO,MAITR,GACFK,EAAaS,UAIb,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,aAAd,mBAIEnB,EAcE,KAZA,wBACEoB,KAAK,SACLD,UAAWE,IAAWxB,EAAe,eACrCyB,QAAS,WACFtB,GACHC,GAAiBD,IALvB,mBAcJ,wBACEuB,MAAOrB,EACPiB,UAAU,kBACVK,SAAU,SAACC,GAAD,OAAatB,GAAmBsB,EAAQC,OAAOH,QAH3D,SA5Ce,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAiD3BI,KAAI,SAAAJ,GAAK,OACrB,wBACEA,MAAK,UAAKA,GADZ,SAIGA,GAFIA,WAQb,sBAAKJ,UAAU,qBAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACTxB,EACA,CAAE,eAAgBO,IAEpBkB,QAAS,WACPjB,GAAeD,IAPnB,qBAaA,wBACEgB,KAAK,SACLD,UAAWE,IACTxB,EACA,CAAE,cAAeU,IAAWZ,EAASqB,gBAEvCM,QAAS,kBAAMd,EAAUb,EAASqB,gBANpC,iCAWA,wBACEI,KAAK,SACLD,UAAWE,IACTxB,EACA,CAAE,cAAeU,IAAWZ,EAASiB,SAEvCU,QAAS,kBAAMd,EAAUb,EAASiB,SANpC,4BAWA,wBACEQ,KAAK,SACLD,UAAWE,IAAWxB,EAAe,eACrCyB,QAAS,WACPd,EAAUb,EAASW,QACnBD,GAAc,GACdF,EAAkB,IANtB,sBAaDH,GACC,oBAAImB,UAAU,QAAd,SACGV,EAAakB,KAAI,SAAAhB,GAAI,OACpB,oBAAeQ,UAAU,wBAAzB,SACGR,GADMA,YGhIrBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cf382a59.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nimport { goodsFromServer } from './api/goods';\nimport { buttonClasses } from './api/buttonClasses';\n\nenum SortType {\n  alfabetically = 'alfabetically',\n  length = 'length',\n  nosort = '',\n}\n\nexport const App: FC = () => {\n  const [goodsVisible, setGoodsVisible] = useState(false);\n  const [lenthOfWords, setSelectedLength] = useState(1);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState(SortType.nosort);\n  const selectValues = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  const visibleGoods = goodsFromServer.filter(\n    (good) => good.length >= lenthOfWords,\n  );\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortBy) {\n      case SortType.alfabetically:\n        return good1.localeCompare(good2);\n      case SortType.length:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__title\">\n        <h1 className=\"title is-2\">\n          Goods\n        </h1>\n\n        {!goodsVisible\n          ? (\n            <button\n              type=\"button\"\n              className={classNames(buttonClasses, 'is-outlined')}\n              onClick={() => {\n                if (!goodsVisible) {\n                  setGoodsVisible(!goodsVisible);\n                }\n              }}\n            >\n              Start\n            </button>\n          )\n          : null}\n\n        <select\n          value={lenthOfWords}\n          className=\"select is-small\"\n          onChange={(element) => setSelectedLength(+element.target.value)}\n        >\n          {selectValues.map(value => (\n            <option\n              value={`${value}`}\n              key={value}\n            >\n              {value}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"buttons has-addons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            buttonClasses,\n            { 'is-outlined': !isReversed },\n          )}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            buttonClasses,\n            { 'is-outlined': sortBy !== SortType.alfabetically },\n          )}\n          onClick={() => setSortBy(SortType.alfabetically)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            buttonClasses,\n            { 'is-outlined': sortBy !== SortType.length },\n          )}\n          onClick={() => setSortBy(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(buttonClasses, 'is-outlined')}\n          onClick={() => {\n            setSortBy(SortType.nosort);\n            setIsReversed(false);\n            setSelectedLength(1);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      {goodsVisible && (\n        <ul className=\"goods\">\n          {visibleGoods.map(good => (\n            <li key={good} className=\"content is-medium box\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","export const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","export const buttonClasses: string[] = [\n  'button',\n  'is-info',\n  'is-small',\n  'box',\n  'is-$white-ter',\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}